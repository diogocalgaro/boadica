PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE configuracoes (
    item TEXT PRIMARY KEY NOT NULL,
    valor TEXT NOT NULL
);
CREATE TABLE locais (
    id INTEGER PRIMARY KEY NOT NULL,
    nome TEXT NOT NULL,
    consultar TEXT  DEFAULT ('N')
);
CREATE TABLE lojas (
    id TEXT PRIMARY KEY NOT NULL,
    nome TEXT,
    local INTEGER DEFAULT (0),
    foreign key (local) references locais (id)
);
CREATE TABLE categorias (
    id INTEGER PRIMARY KEY NOT NULL,
    nome TEXT NOT NULL,
    url TEXT NOT NULL,
    consultar TEXT NOT NULL DEFAULT ('N')
);
CREATE TABLE produtos (
    id INTEGER PRIMARY KEY NOT NULL,
    categoria INTEGER NOT NULL,
    fabricante TEXT NOT NULL,
    nome TEXT NOT NULL,
    favorito TEXT DEFAULT ('N'),
    foreign key (categoria) references categorias (id)
);
CREATE TABLE precos (
	produto integer not null,
	loja text not null,
	data date not null,
	valor_num decimal(10,2),
	valor_str text,
	primary key(produto, loja, data),
	foreign key (produto) references produtos(id),
	foreign key (loja) references lojas(id)
);
CREATE VIEW "tb_lojas" AS
select l.id, l.nome, o.nome as localizacao
from lojas l
left join locais o on (o.id = l.local)
where o.consultar='S';
CREATE INDEX precos_idx1 on precos (produto);
CREATE INDEX precos_idx2 on precos (loja);
CREATE INDEX precos_idx3 on precos (data);
CREATE INDEX precos_idx4 on precos (valor_num);
CREATE INDEX lojas_idx1 on lojas (local);
CREATE INDEX locais_idx1 on locais (nome);
CREATE VIEW "vw_estatisticas" AS select 'Categorias: '||count(*) as "Info" from categorias
union all
select 'Produtos: '||count(*) from produtos
union all
select 'Produtos favoritos: '||count(*) from produtos where favorito='S'
union all
select 'Lojas: '||count(*) from lojas
union all
select 'Locais: '||count(*) from locais
union all
select 'Locais visíveis: '||count(*) from locais where consultar='S'
union all
select 'Preços: '||count(*) from precos
union all
select 'Tempo: '||count(*)||' dias com dados carregados' from (
        select data from precos
        group by 1
)
union all
select 'Carga de dados mais recente: '||max(data) from precos;
CREATE VIEW "tb_produtos" AS
select p.id, p.categoria as categ_id, c.nome as categoria, p.fabricante, p.nome, p.favorito
from produtos p
inner join categorias c on (c.id = p.categoria)
where c.consultar = 'S';
CREATE VIEW "vw_lista_produtos" AS
select quote(categ_id||';'||id) as item, quote('['||categoria||']  '||fabricante||' - '||nome) as descricao, p.*
from tb_produtos p
order by fabricante, nome, id;
CREATE VIEW "tb_precos" AS
select produto, loja, valor, valorf, max(data) as data
from (
	select r.produto, r.loja, r.data, r.valor_str as valor, min(r.valor_num) as valorf
	from precos r
	inner join tb_produtos p on (p.id = r.produto)
	inner join tb_lojas l on (l.id = r.loja)
	group by 1, 3
	order by 1, 2, 3, 5
)
group by 1
order by 1, 2, 3, 4, 5;
CREATE VIEW "vw_lista_preco" AS
select 
quote(p.categoria||';'||p.id) as item,
quote('['||c.nome||']  '||p.fabricante||' - '||p.nome||'  R\$'||r.valor||'  ('||l.nome||', '||strftime('%d/%m',r.data)||')') as descricao,
c.id as categ_id,
c.nome as categ_nome,
p.id as prod_id,
p.fabricante,
p.nome as prod_nome,
p.favorito,
l.id as loja_id,
l.nome as loja,
r.valor,
r.valorf,
r.data
from tb_precos r
inner join produtos p on (p.id = r.produto)
inner join categorias c on (c.id = p.categoria)
inner join lojas l on (l.id = r.loja)
order by p.fabricante, p.nome, p.id;
CREATE VIEW "vw_novos_produtos" AS select produto
from (
	select r.produto, max(data) as ult_data, count(*) as total
	from precos r	
	group by 1
)
where ult_data = current_date and total = 1
order by 1;
CREATE VIEW "vw_produto" AS
select
p.id as prod_id,
p.fabricante,
p.nome as prod_nome,
p.favorito,
c.id as categ_id,
c.nome as categ_nome,
l.id as loja_id,
l.nome as loja_nome,
r.data,
r.valor_num,
r.valor_str
from produtos p
inner join categorias c on (c.id = p.categoria)
inner join precos r on (r.produto = p.id)
inner join tb_lojas l on (l.id = r.loja)
order by r.data desc, r.valor_num, l.localizacao, l.nome;
INSERT INTO locais (id, nome, consultar) VALUES ('0', 'Desconhecido', 'S');
INSERT INTO categorias (id, nome, url) VALUES ('0', 'Desconhecida', '/pesquisa/precos');
INSERT INTO configuracoes (item, valor) VALUES ('versao_bdados', '2.0');
INSERT INTO configuracoes (item, valor) VALUES ('oferta_valor_min', '0');
INSERT INTO configuracoes (item, valor) VALUES ('oferta_valor_max', '100');
COMMIT;
