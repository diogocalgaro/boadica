PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE precos (
	produto integer not null,
	loja varchar not null,
	data date not null,
	valor_num decimal(10,2),
	valor_str text,
	primary key(produto, loja, data),
	foreign key (produto) references produtos(id),
	foreign key (loja) references lojas(id)
);
CREATE TABLE lojas (
    id VARCHAR NOT NULL,
    nome VARCHAR,
    local INTEGER DEFAULT (0),
    primary key (id),
    foreign key (local) references locais (id)
);
CREATE TABLE locais (
    id INTEGER NOT NULL,
    nome TEXT NOT NULL,
    consultar TEXT  DEFAULT ('N'),
    primary key (id)
);
CREATE TABLE produtos (
    id INTEGER NOT NULL,
    fabricante VARCHAR,
    nome VARCHAR,
    favorito TEXT DEFAULT ('N'),
    primary key (id)
);
CREATE TABLE "configuracoes" (
    "item" TEXT NOT NULL,
    "valor" TEXT NOT NULL,
    primary key (item)
);
CREATE VIEW "tb_lojas" AS select l.id, l.nome, o.nome as localizacao
from lojas l
left join locais o on (o.id = l.local)
where o.consultar='S'
order by 1;
CREATE VIEW "tb_precos_menor_valor" AS
select produto, loja, data, valor
from (
	select p.produto, p.loja, p.data, p.valor_str as valor, min(p.valor_num)
	from precos p
	inner join tb_lojas l on (l.id = p.loja)
	group by 1
	order by 1, 5, 3 desc, 2
);
CREATE VIEW "vw_novidades" AS select p.fabricante as "Fabricante", p.nome as "Item", l.nome as "Loja", r.valor_str as "Preço"
from precos r
inner join produtos p on (p.id = r.produto)
inner join tb_lojas l on (l.id = r.loja)
where r.data = current_date and
not r.produto in (
	select produto
	from precos
	where data < current_date and data >= date('now', '-7 day')
	group by 1
	order by 1
)
order by 2, 1, 4, 3;
CREATE VIEW "vw_obter_lista_produtos" AS
select id,
substr(nome || '                                                  ', 1, 50) || ' (' || trim(fabricante) || ')' as item,
favorito
from produtos
order by nome, fabricante, id*1.0;
CREATE VIEW "vw_obter_estatisticas" AS
select 'Produtos: '||count(*) as "Info" from produtos
union all
select 'Produtos favoritos: '||count(*) from produtos where favorito='S'
union all
select 'Lojas: '||count(*) from lojas
union all
select 'Locais: '||count(*) from locais
union all
select 'Locais visíveis: '||count(*) from locais where consultar='S'
union all
select 'Preços: '||count(*) from precos
union all
select 'Dia(s): '||count(*)||' dias com dados carregados' from (
	select data from precos
	group by 1
)
union all
select 'Carga de dados mais recente: '||max(data) from precos;
CREATE VIEW "tb_precos_ultimo_valor" AS
select produto, loja, valor, max(data) as data
from (
	select p.produto, p.loja, p.data, p.valor_str as valor, min(p.valor_num)
	from precos p
	inner join tb_lojas l on (l.id = p.loja)
	group by 1, 3
	order by 1, 2, 3, 5
)
group by 1
order by 1, 2, 3, 4;
CREATE VIEW "vw_buscar_favorito_id" AS
select p.id, 'R\$ '||substr('      ' || r.valor, -6, 6)||'  =  '||trim(p.fabricante)||' - '||p.nome||'  @  '||l.nome||' '||r.data as descricao
from tb_precos_ultimo_valor r
inner join produtos p on (p.id = r.produto)
inner join tb_lojas l on (l.id = r.loja)
where p.favorito='S'
order by 2, 1;
CREATE VIEW "vw_buscar_item_id" AS
select p.id, 'R\$ '||substr('      ' || r.valor, -6, 6)||'  =  '||trim(p.fabricante)||' - '||p.nome||'  @  '||l.nome||' '||r.data as descricao
from tb_precos_ultimo_valor r
inner join produtos p on (p.id = r.produto)
inner join tb_lojas l on (l.id = r.loja)
order by 2, 1;
CREATE VIEW "vw_buscar_item_ultimo_preco" AS
select p.id, p.fabricante||' - '||p.nome||'   ['||l.nome||', R\$'||r.valor||', '||r.data||']' as descricao, p.nome as produto
from tb_precos_ultimo_valor r
inner join produtos p on (p.id = r.produto)
inner join tb_lojas l on (l.id = r.loja)
order by 2, 1;
CREATE VIEW "vw_buscar_por_loja" AS
select p.fabricante as "Fabricante", p.nome as "Item", r.valor as "Preço", l.nome as "Loja", r.data as "Data"
from produtos p
inner join tb_precos_ultimo_valor r on (r.produto = p.id)
inner join tb_lojas l on (l.id = r.loja)
group by 1, 2, 3, 4
order by r.valor, p.nome;
CREATE INDEX precos_idx1 on precos (produto);
CREATE INDEX precos_idx2 on precos (loja);
CREATE INDEX precos_idx3 on precos (data);
CREATE INDEX precos_idx4 on precos (valor_num);
CREATE INDEX lojas_idx1 on lojas (local);
CREATE INDEX locais_idx1 on locais (nome);
CREATE VIEW "vw_diferenca_preco" AS
select 
p.fabricante as "Fabricante", p.nome as "Item", 
q0.valor_str as "Valor Atual", strftime('%d/%m', q0.data) as "Dt Nova",
q0.valor_str2 as "Valor Anterior", strftime('%d/%m', q0.data2) as "Dt Anterior",
q0.diferenca as "Diferenca", l.nome as "Loja"
from (
	select q1.produto, q1.loja, q1.data, q1.valor_str, q1.valor_num, q2.data2, q2.valor_str2, q2.valor_num2, (q1.valor_num - q2.valor_num2) as diferenca
	from (
		select p.produto, p.loja, p.data, p.valor_num, p.valor_str
		from precos p
		where p.data = current_date
	) as q1
	inner join (
		select p.produto, p.loja, max(p.data) as data2, p.valor_num as valor_num2, p.valor_str as valor_str2
		from precos p
		where p.data >= date('now', '-5 day')
		group by 1, 2, 4
	) as q2 on (q2.produto = q1.produto and q2.loja = q1.loja)
) as q0
inner join produtos p on (p.id = q0.produto)
inner join tb_lojas l on (l.id = q0.loja)
where q0.diferenca <> 0.00
order by q0.diferenca, q0.valor_num, p.nome, l.nome;
CREATE VIEW "vw_melhores_ofertas" AS
select p.fabricante as "Fabricante", p.nome as "Item", l.nome as "Loja", r2.preco
from (
	select r.produto, r.loja, r.valor_str as preco, min(r.valor_num) 
	from precos r
	where r.data = current_date and
	r.valor_num between (select valor*1.0 from configuracoes where item = 'oferta_valor_min') and (select valor*1.0 from configuracoes where item = 'oferta_valor_max')
	group by 1
) r2
inner join produtos p on (p.id = r2.produto)
inner join tb_lojas l on (l.id = r2.loja)
order by 4, 2, 1, 3;
INSERT INTO locais (id, nome, consultar) VALUES ('0', 'Desconhecido', 'S');
INSERT INTO configuracoes (item, valor) VALUES ('versao_bdados', '1.00');
INSERT INTO configuracoes (item, valor) VALUES ('oferta_valor_min', '0');
INSERT INTO configuracoes (item, valor) VALUES ('oferta_valor_max', '100');
COMMIT;
